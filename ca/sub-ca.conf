#
# OpenSSL Configuration file for sub CA operation
# 20 Mar 2018
# Chul-Woong Yang (cwyang)
#
# Many parts from Bulletproof SSL and TLS book by Ivan Ristic.
# Thanks! Ivan Ristic.

#
# 1. Master
#
[default]
name		= sub-ca
ca_server	= 10.0.0.1		# SHOULD BE EDITED
ocsp_port	= 8888			# SHOULD BE EDITED
aia_url		= http://$ca_server/$name.crt
crl_url		= http://$ca_server/$name.crl
ocsp_url	= http://$ca_server:$ocsp_port
default_ca	= ca_default
name_opt	= utf8, esc_ctrl, multiline, lname, align

# Distinguised Name of Certificate Authority
[ca_dn]
countryName	= "KR"
organizationName= "cwyang"
commonName	= "cwyang's Test Sub CA"

#
# 2. CA operation
#
[ca_default]
home		= .
database	= $home/db/index
serial		= $home/db/serial
crlnumber	= $home/db/crlnumber
certificate	= $home/$name.crt
private_key	= $home/private/$name.key
RANDFILE	= $home/private/random
new_certs_dir	= $home/certs
unique_subject	= no
copy_extensions = copy			# != ROOTCA
default_days	= 365			# != ROOTCA
default_crl_days= 30			# != ROOTCA
default_md	= sha256
policy		= policy_c_o_match

[policy_c_o_match]
countryName		= match		# MUST MATCH
stateOrProvinceName	= optional
organizationName	= match
organizationalUnitName	= optional
commonName		= supplied	# MUST BE SUPPLIED
emailAddress		= optional

#
# 3. Handling `req' command, used in generating self-signed root cert
#
[req]
default_bit		= 4096
encrypt_key		= no
default_md		= sha256
utf8			= yes
string_mask		= utf8only
prompt			= no		# use conf's value, not from user
distinguished_name	= ca_dn
req_extensions		= ca_ext

# Important part of [req]
# refer: man x509v3_config
# A certificate-using system must reject the certificate if it encounters a
# critical extension that it does not recognize, or a critical extension that
# contains information that it cannot process.

[ca_ext]
basicConstraints	= critical, CA:true	# no pathlen for root cert
keyUsage		= critical, keyCertSign, cRLSign
subjectKeyIdentifier	= hash

#
# 4. Info used during the construction of certs issued by the root CA
#
[sub_ca_ext]
authorityInfoAccess	= @issuer_info
authorityKeyIdentifier	= keyid:always
basicConstraints	= critical, CA:true, pathlen:0	# gen leaf cert only
crlDistributionPoints	= @crl_info
extendedKeyUsage	= clientAuth, serverAuth	# RESTRICT sub-ca
keyUsage		= critical, keyCertSign, cRLSign
nameConstraints		= @name_constraints
subjectKeyIdentifier	= hash

[crl_info]
URI.0			= $crl_url
[issuer_info]
caIssuers;URI.0		= $aia_url
OCSP;URI.0		= $ocsp_url
[name_constraints]
# RESTRICT sub-ca
#permitted;DNS.0		= test.com			
permitted;IP.0		= 172.16.0.0/255.255.0.0
#excluded;IP.0		= 0.0.0.0/0.0.0.0
#excluded;IP.1		= 0:0:0:0:0:0:0:0/0:0:0:0:0:0:0:0

#
# 5. OCSP response signing extension
#
[ocsp_ext]
authorityKeyIdentifier	= keyid:always
basicConstraints	= critical, CA:false
extendedKeyUsage	= OCSPSigning
keyUsage		= critical, digitalSignature
subjectKeyIdentifier	= hash


#
# 6. req_DN, used in leaf cert generation
#

[ req_dn ]
countryName			= Country Name (2 letter code)
countryName_default		= KR
countryName_min			= 2
countryName_max			= 2

stateOrProvinceName		= State or Province Name (full name)
stateOrProvinceName_default	= Daejeon

0.organizationName		= Organization Name (eg, company)
0.organizationName_default	= cwyang

commonName			= Common Name (e.g. server FQDN or YOUR name)
commonName_default		= A test cert by cwyang
commonName_max			= 64

#
# 7. server_ext and client_ext
#
[server_ext]
authorityInfoAccess		= @issuer_info
authorityKeyIdentifier		= keyid:always
basicConstraints		= critical, CA:false
crlDistributionPoints		= @crl_info
extendedKeyUsage		= clientAuth, serverAuth
keyUsage			= critical, digitalSignature, keyEncipherment
subjectKeyIdentifier		= hash
[client_ext]
authorityInfoAccess		= @issuer_info
authorityKeyIdentifier		= keyid:always
basicConstraints		= critical, CA:false
crlDistributionPoints		= @crl_info
extendedKeyUsage		= clientAuth
keyUsage			= critical, digitalSignature
subjectKeyIdentifier		= hash
